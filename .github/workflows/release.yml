name: Release
on:
  push:
    tags:
      - '**'
    branches-ignore:
      - '**'

jobs:
  build-release:
    runs-on: macos-12
    steps:
 # Not needed since it's a public repo
 #     - name: Granting private modules access
 #       run: |
 #         git config --global url."https://${{ secrets.GO_MODULES_TOKEN }}:x-oauth-basic@github.com/blacs30".insteadOf "https://github.com/blacs30"

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ~1.18

      - name: Check out code
        uses: actions/checkout@v3

      - name: Unshallow
        run: git fetch --prune --unshallow

      - name: "Validates GO releaser config"
        uses: goreleaser/goreleaser-action@v2
        with:
          args: check

      - name: Build Alfred workflow
        run: |
          make build

      - name: Create universal binary
        run: |
          make universal-binary

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: universal-binary
          path: workflow/bitwarden-alfred-workflow

  sign-release:
    runs-on: macos-latest
    steps:
    # Your existing steps to checkout code and build the binary
    - name: Install Xcode command line tools
      run: xcode-select --install

    - name: Dowload artifacts
      uses: actions/download-artifact@v2
      with:
        name: universal-binary
        path: download

    - name: Decode and install the certificate
      run: |
        echo "${{ secrets.MAC_CERT_BASE64 }}" | base64 --decode > certificate.p12
        KEYCHAIN_PATH=$RUNNER_TEMP/build.keychain
        security create-keychain -p "" $KEYCHAIN_PATH
        security import certificate.p12 -k $KEYCHAIN_PATH -P $MAC_CERT_PASSWORD -T download/bitwarden-alfred-workflow
        security set-key-partition-list -S apple-tool:,apple: -s -k "" $KEYCHAIN_PATH
        security unlock-keychain -p "" $KEYCHAIN_PATH

    - name: Sign the binary
      run: |
        codesign --sign "Bitwarden Alread Workflow: zshen (bitwarden-alfred-workflow)" --timestamp --options runtime --keychain $RUNNER_TEMP/build.keychain download/bitwarden-alfred-workflow

    - name: Notarize the binary
      uses: apple-actions/notarize-app@v1
      with:
        app-path: download/bitwarden-alfred-workflow 
        apple-id: ${{ secrets.APPLE_ID }}
        apple-id-password: ${{ secrets.MAC_DEV_PASSWORD }}
        primary-bundle-id: "com.bitwarden-alfred-workflow" # Use an appropriate bundle ID for your app

    - name: Staple the binary
      run: xcrun stapler staple download/bitwarden-alfred-workflow

    # Followed by your existing steps to create a release and upload artifacts
 

  release:
    needs: build-release
    runs-on: ubuntu-20.04
    steps:
 # Not needed since it's a public repo
#      - name: Granting private modules access
#        run: |
#          git config --global url."https://${{ secrets.GO_MODULES_TOKEN }}:x-oauth-basic@github.com/blacs30".insteadOf "https://github.com/blacs30"

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ~1.18

      - name: Check out code
        uses: actions/checkout@v3

      - name: Dowload artifacts
        uses: actions/download-artifact@v2
        with:
          name: universal-binary
          path: download

      - run: |
          test -f download/bitwarden-alfred-workflow && cp download/bitwarden-alfred-workflow workflow/bitwarden-alfred-workflow
          chmod +x workflow/bitwarden-alfred-workflow
          rm -rf download

      - name: Copy run dependencies
        run: |
          make copy-build-assets

      - name: Package Alfred workflow
        run: |
          make package-alfred

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
